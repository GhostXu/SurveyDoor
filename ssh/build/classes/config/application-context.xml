<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">  
  <!-- 注解 -->
  <context:annotation-config/>
  <!-- 包扫描 -->
  <context:component-scan base-package="cn.listener, cn.dao.impl,cn.service.impl,cn.web"></context:component-scan>
  
  <!-- 配置数据源 -->
  <context:property-placeholder location="classpath:config/database.properties"/>
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
  	<property name="driverClass" value="${jdbc.driverclass}" />
	<property name="jdbcUrl" value="${jdbc.url}" />
	<property name="user" value="${jdbc.username}" />
	<property name="password" value="${jdbc.password}" />
	
	<property name="maxPoolSize" value="${c3p0.pool.size.max}" />
	<property name="minPoolSize" value="${c3p0.pool.size.min}" />
	<property name="initialPoolSize" value="${c3p0.pool.size.ini}" />
	<property name="acquireIncrement" value="${c3p0.pool.size.increment}" />
  </bean>
  <bean id="dataSource_sec" parent="dataSource">
	<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test_sec" />
  </bean>
  
  <!-- 配置数据源路由器 -->
  <bean name="dataSource_router" class="cn.dataSource.SurveyparkDataSourceRouter">
  	<property name="targetDataSources">
  		<map>
  			<entry key="odd" value-ref="dataSource" />
  			<entry key="even" value-ref="dataSource_sec" />
  		</map>
  	</property>
  	<property name="defaultTargetDataSource" ref="dataSource"></property>
  </bean>
  
  <!-- 配置hibernate -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
  	<property name="dataSource" ref="dataSource_router"></property>
  	<property name="configLocation" value="classpath:config/hibernate.cfg.xml"></property>
  </bean>
  
  <!-- 配置事务 -->
  <!-- 配置事务管理器 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  	<property name="sessionFactory">
  		<ref bean="sessionFactory"/>
  	</property>
  </bean>
  
  <!-- 配置Logger -->
  <bean id="logger" class="cn.advice.Logger">
  	<property name="logService" ref="logService"></property>
  </bean>
    
  <tx:advice id="tx" transaction-manager="transactionManager">
  	<tx:attributes>
  		<tx:method name="insert*" read-only="false"/>
  		<tx:method name="new*" read-only="false"/>
  		<tx:method name="save*" read-only="false"/>
  		<tx:method name="append*" read-only="false"/>
  		<tx:method name="update*" read-only="false"/>
  		<tx:method name="delete*" read-only="false"/>
  		<tx:method name="clear*" read-only = "false"/>
  		<tx:method name="*" read-only="true"/>
  	</tx:attributes>
  </tx:advice>
  
  <!-- 配置aop -->
  <aop:config>
  						 <!-- execution([可见性] 返回类型 [声明类型].方法名(参数) [异常]) -->
  	<aop:pointcut expression="execution(* cn.service.impl.*.*(..))" id="txPointcut"/>
  	
  	<aop:pointcut expression="(execution(* cn.service.impl.*.save*(..))
  							or execution(* cn.service.impl.*.update*(..))
  							or execution(* cn.service.impl.*.delete*(..))
  							or execution(* cn.service.impl.*.clear*(..))
  							or execution(* cn.service.impl.*.insert*(..))
  							or execution(* cn.service.impl.*.new*(..))) and (!bean(logService))" id="loggerPointcut"/>
  	
  	<aop:advisor advice-ref="tx" pointcut-ref="txPointcut" order="1"></aop:advisor>
  	
	<aop:aspect id="loggerAspect" ref="logger" order="0">
		<aop:around method="record" pointcut-ref="loggerPointcut"/>
	</aop:aspect>
  </aop:config>
  
</beans>